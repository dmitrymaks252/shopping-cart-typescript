{"version":3,"sources":["components/CartItem/CartItem.module.scss","components/AddNewItemForm/AddNewItemForm.module.scss","pages/App/ShoppingCartPage.module.scss","components/SummaryBlock/SummaryBlock.module.scss","components/Cart/Cart.module.scss","components/Input/Input.module.scss","store/types.ts","store/reducers/cartReducer.ts","store/actions/actions.ts","store/sagas/index.ts","store/store.ts","store/selectors/selectors.ts","components/SummaryBlock/SummaryBlock.tsx","hooks/hooks.ts","components/CartItem/CartItem.tsx","components/Cart/Cart.tsx","components/Input/Input.tsx","components/AddNewItemForm/AddNewItemForm.tsx","pages/App/ShoppingCartPage.tsx","App.tsx","index.tsx"],"names":["module","exports","actionTypes","initialState","data","isLoading","error","loadProductsFailure","payload","type","LOAD_PRODUCTS_FAILURE","changeQuantity","CHANGE_QUANTITY","workerSaga","watcherSaga","rootSaga","call","axios","put","LOAD_PRODUCTS_SUCCESS","window","alert","Error","message","takeLatest","LOAD_PRODUCTS","all","sagaMiddleware","createSagaMiddleware","store","createStore","state","action","map","el","id","quantity","quantityChanger","REMOVE_PRODUCT","filter","ADD_PRODUCT","newProductItem","Math","random","imgUrl","composeWithDevTools","applyMiddleware","run","getCartItems","getLoadingStatus","getTotalPrice","createSelector","items","reduce","price","item","SummaryBlock","totalPrice","useSelector","className","s","summary","toFixed","disabled","checkoutBtn","useAppDispatch","useDispatch","useAppSelector","CartItem","dispatch","CartItemCard","src","alt","name","description","title","HeaderTitle","removeBtn","onClick","decrementBtn","incrementBtn","Cart","cartItems","length","emptyCart","Input","label","register","required","value","numberInput","min","max","valueAsNumber","stringInput","inputField","placeholder","AddNewItemForm","useForm","reset","handleSubmit","errors","formState","form","onSubmit","as","requiredInput","addNewProductBtn","ShoppingCartPage","useEffect","header","loading","mainPart","totalAndForm","App","StrictMode","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6197ccc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CartItemCard\":\"CartItem_CartItemCard__2OqIF\",\"quantity\":\"CartItem_quantity__3aAut\",\"decrementBtn\":\"CartItem_decrementBtn__1fK3j\",\"incrementBtn\":\"CartItem_incrementBtn__2S1LB\",\"description\":\"CartItem_description__3ocUL\",\"removeBtn\":\"CartItem_removeBtn__3vtAi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddNewItemForm_form__1AFSz\",\"requiredInput\":\"AddNewItemForm_requiredInput__3fybh\",\"addNewProductBtn\":\"AddNewItemForm_addNewProductBtn__W9ekZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ShoppingCartPage_header__XGoRd\",\"loading\":\"ShoppingCartPage_loading__XeC7k\",\"mainPart\":\"ShoppingCartPage_mainPart__3baCo\",\"totalAndForm\":\"ShoppingCartPage_totalAndForm__3Ugg-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"SummaryBlock_summary__2eygP\",\"checkoutBtn\":\"SummaryBlock_checkoutBtn__2Wkl_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emptyCart\":\"Cart_emptyCart__15dei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"Input_inputField__3nwtZ\"};","export enum actionTypes {\r\n  LOAD_PRODUCTS = \"LOAD_PRODUCTS\",\r\n  LOAD_PRODUCTS_SUCCESS = \"LOAD_PRODUCTS_SUCCESS\",\r\n  LOAD_PRODUCTS_FAILURE = \"LOAD_PRODUCTS_FAILURE\",\r\n  CHANGE_QUANTITY = \"CHANGE_QUANTITY\",\r\n  REMOVE_PRODUCT = \"REMOVE_PRODUCT\",\r\n  ADD_PRODUCT = \"ADD_PRODUCT\"\r\n}\r\n\r\nexport type CartProductType = {\r\n  id: number\r\n  name: string\r\n  price: number\r\n  quantity: number\r\n  imgUrl: string\r\n}\r\n\r\nexport type CartStateType = {\r\n  data: Array<CartProductType>\r\n  isLoading: boolean\r\n  error: null | string\r\n}\r\n\r\nexport type FormValuesType = {\r\n  name: string\r\n  price: number\r\n  quantity: number\r\n}\r\n\r\n//Redux Action types\r\ntype LoadProductsType = {\r\n  type: actionTypes.LOAD_PRODUCTS\r\n}\r\n\r\ntype LoadProductSuccessType = {\r\n  type: actionTypes.LOAD_PRODUCTS_SUCCESS\r\n  payload: CartProductType[]\r\n}\r\n\r\ntype LoadProductsFailureType = {\r\n  type: actionTypes.LOAD_PRODUCTS_FAILURE\r\n  payload: string\r\n}\r\n\r\ntype ChangeQuantityType = {\r\n  type: actionTypes.CHANGE_QUANTITY\r\n  payload: {\r\n    id: number\r\n    quantityChanger: number\r\n  }\r\n}\r\n\r\ntype DeleteProductType = {\r\n  type: actionTypes.REMOVE_PRODUCT\r\n  payload: {\r\n    id: number\r\n  }\r\n}\r\n\r\ntype AddProductType = {\r\n  type: actionTypes.ADD_PRODUCT\r\n  payload: FormValuesType\r\n}\r\n\r\nexport type ActionTypes =\r\n  | LoadProductsType\r\n  | LoadProductSuccessType\r\n  | LoadProductsFailureType\r\n  | ChangeQuantityType\r\n  | DeleteProductType\r\n  | AddProductType","import { actionTypes, ActionTypes, CartProductType, CartStateType } from \"../types\";\r\n\r\n\r\nexport const initialState: CartStateType = {\r\n  data: [],\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nexport default function cartReducer(state = initialState, action: ActionTypes): CartStateType {\r\n  switch (action.type) {\r\n    case actionTypes.LOAD_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case actionTypes.LOAD_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload\r\n      };\r\n    case actionTypes.LOAD_PRODUCTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    case actionTypes.CHANGE_QUANTITY:\r\n      return {\r\n        ...state,\r\n        data: state.data.map(el =>\r\n          el.id === action.payload.id\r\n            ? {...el, quantity: el.quantity + action.payload.quantityChanger}\r\n            : el\r\n        )\r\n      };\r\n    case actionTypes.REMOVE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        data: state.data.filter(el => el.id !== action.payload.id)\r\n      };\r\n    case actionTypes.ADD_PRODUCT:\r\n      const newProductItem: CartProductType = {\r\n        ...action.payload,\r\n        id: Math.random(),\r\n        imgUrl: \"https://grassrootscha.com/wp-content/uploads/2018/11/shutterstock_161251868-1.jpg\"\r\n      };\r\n      return {\r\n        ...state,\r\n        data: [newProductItem, ...state.data]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ActionTypes, actionTypes, CartProductType, FormValuesType } from \"../types\";\r\n\r\nexport const loadProducts = (): ActionTypes => ({\r\n  type: actionTypes.LOAD_PRODUCTS\r\n});\r\n\r\nexport const loadProductsSuccess = (payload: Array<CartProductType>): ActionTypes => ({\r\n  type: actionTypes.LOAD_PRODUCTS_SUCCESS,\r\n  payload\r\n});\r\n\r\nexport const loadProductsFailure = (payload: string): ActionTypes => ({\r\n  type: actionTypes.LOAD_PRODUCTS_FAILURE,\r\n  payload\r\n});\r\n\r\nexport const changeQuantity = (payload: { id: number, quantityChanger: number }): ActionTypes => ({\r\n  type: actionTypes.CHANGE_QUANTITY,\r\n  payload\r\n});\r\n\r\nexport const removeProduct = (payload: { id: number }): ActionTypes => ({\r\n  type: actionTypes.REMOVE_PRODUCT,\r\n  payload\r\n});\r\n\r\nexport const addProduct = (payload: FormValuesType): ActionTypes => ({\r\n  type: actionTypes.ADD_PRODUCT,\r\n  payload\r\n});\r\n\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { takeLatest, call, put, all } from \"redux-saga/effects\";\r\n\r\nimport { actionTypes, CartProductType } from \"../types\";\r\nimport { loadProductsFailure, loadProductsSuccess } from \"../actions/actions\";\r\n\r\nfunction* workerSaga() {\r\n  try {\r\n    const {data}: AxiosResponse<Array<CartProductType>> = yield call(axios, \"https://my-json-server.typicode.com/dmitrymaks252/dmitrymaks252/products\");\r\n    yield put(loadProductsSuccess(data));\r\n  } catch (e) {\r\n    window.alert(e);\r\n    if (e instanceof Error) {\r\n      yield put(loadProductsFailure(e.message));\r\n    }\r\n  }\r\n}\r\n\r\nfunction* watcherSaga() {\r\n  yield takeLatest(actionTypes.LOAD_PRODUCTS, workerSaga);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([watcherSaga()]);\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport cartReducer from \"./reducers/cartReducer\";\r\nimport rootSaga from \"./sagas\";\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  cartReducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  )\r\n);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport default store;","import { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"../store\";\r\nimport { CartProductType } from \"../types\";\r\n\r\nexport const getCartItems = (store: RootState): Array<CartProductType> => store.data;\r\n\r\nexport const getLoadingStatus = (store: RootState): boolean => store.isLoading;\r\n\r\nexport const getTotalPrice = createSelector(getCartItems, items => items.reduce((price, item) => price + (item.price * item.quantity), 0));","import { FC } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { getTotalPrice } from \"../../store/selectors/selectors\";\r\n\r\nimport s from \"./SummaryBlock.module.scss\";\r\n\r\nexport const SummaryBlock: FC = () => {\r\n  const totalPrice = useSelector(getTotalPrice);\r\n  return (\r\n    <div className={s.summary}>\r\n      <h3>Total price:</h3>\r\n      <p>${totalPrice.toFixed(2)}</p>\r\n      <button disabled={totalPrice === 0} className={s.checkoutBtn}>Proceed to Checkout</button>\r\n    </div>\r\n\r\n  );\r\n};","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"react\";\r\n\r\nimport { RootState } from \"../store/store\";\r\nimport { ActionTypes } from \"../store/types\";\r\n\r\nexport const useAppDispatch = () => useDispatch<Dispatch<ActionTypes>>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\n","import { FC } from \"react\";\r\n\r\nimport { changeQuantity, removeProduct } from \"../../store/actions/actions\";\r\nimport { CartProductType } from \"../../store/types\";\r\nimport { useAppDispatch } from \"../../hooks/hooks\";\r\n\r\nimport s from \"./CartItem.module.scss\";\r\n\r\ntype PropsType = {\r\n  item: CartProductType\r\n}\r\n\r\nexport const CartItem: FC<PropsType> = ({item}) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleIncrement = () => {\r\n    dispatch(\r\n      changeQuantity({id: item.id, quantityChanger: 1})\r\n    );\r\n  };\r\n  const handleDecrement = () => {\r\n    dispatch(\r\n      changeQuantity({id: item.id, quantityChanger: -1})\r\n    );\r\n  };\r\n  const handleRemove = () => {\r\n    dispatch(\r\n      removeProduct({id: item.id})\r\n    );\r\n  };\r\n\r\n  if (!item) return null;\r\n  return (\r\n    <div className={s.CartItemCard}>\r\n      <img src={item.imgUrl} alt={item.name}/>\r\n      <div className={s.description}>\r\n        <h3 title=\"name\" className={s.HeaderTitle}>{item.name}</h3>\r\n        <p>Price: ${item.price.toFixed(2)} </p>\r\n        <p>Subtotal: ${(item.price * item.quantity).toFixed(2)}</p>\r\n        <button className={s.removeBtn} onClick={handleRemove} title=\"remove\">Remove</button>\r\n      </div>\r\n      <div className={s.quantity}>\r\n\r\n        <button\r\n          className={s.decrementBtn}\r\n          disabled={item.quantity === 1}\r\n          onClick={handleDecrement}\r\n          title=\"decrement\"\r\n        >-\r\n        </button>\r\n        <p title=\"quantity\">{item.quantity}</p>\r\n        <button\r\n          className={s.incrementBtn}\r\n          onClick={handleIncrement}\r\n          title=\"increment\">+\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { FC } from \"react\";\r\n\r\nimport { CartItem } from \"../CartItem/CartItem\";\r\nimport { useAppSelector } from \"../../hooks/hooks\";\r\nimport { getCartItems } from \"../../store/selectors/selectors\";\r\n\r\nimport s from \"./Cart.module.scss\";\r\n\r\n\r\nexport const Cart: FC = () => {\r\n  const cartItems = useAppSelector(getCartItems);\r\n  return (\r\n    <>\r\n      {\r\n        cartItems.length === 0\r\n          ? <h2 className={s.emptyCart}>Cart is empty, please add items</h2>\r\n          : <div>\r\n            {cartItems.map(item => <CartItem key={item.id} item={item}/>)}\r\n          </div>\r\n      }\r\n    </>\r\n  );\r\n};","import { FC } from \"react\";\r\nimport { FieldValues, UseFormRegister } from \"react-hook-form\";\r\n\r\nimport s from './Input.module.scss'\r\n\r\ntype PropsType = {\r\n  label: string\r\n  type: \"string\" | \"number\"\r\n  register: UseFormRegister<FieldValues>\r\n\r\n}\r\n\r\nexport const Input: FC<PropsType> = ({\r\n                                       label,\r\n                                       type,\r\n                                       register\r\n                                     }) => {\r\n  const required = {\r\n      value: true, message: `Field is required`\r\n  }\r\n  const numberInput = {\r\n    required: required,\r\n    min: {\r\n      value: 1,\r\n      message: `${label} cannot be below zero`\r\n    },\r\n    max: {\r\n      value: 1e6,\r\n      message: `Max valid is one million`\r\n    },\r\n    valueAsNumber: true\r\n  };\r\n  const stringInput = {required: required};\r\n\r\n  return (\r\n    <input\r\n      className={s.inputField}\r\n      placeholder={label}\r\n      type={type}\r\n      {...register(\r\n        label,\r\n        type === \"number\"\r\n          ? numberInput\r\n          : stringInput\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\n","import { FC } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {ErrorMessage} from \"@hookform/error-message\"\r\n\r\nimport { Input } from \"../Input/Input\";\r\nimport { useAppDispatch } from \"../../hooks/hooks\";\r\nimport { FormValuesType } from \"../../store/types\";\r\nimport { addProduct } from \"../../store/actions/actions\";\r\n\r\nimport s from \"./AddNewItemForm.module.scss\";\r\n\r\n\r\nexport const AddNewItemForm: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const {\r\n    register,\r\n    reset,\r\n    handleSubmit,\r\n    formState: {errors}\r\n  } = useForm<FormValuesType>();\r\n  const onSubmit = (data: FormValuesType) => {\r\n    dispatch(addProduct(data));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\r\n      <label>\r\n        Name:\r\n        <Input\r\n          label={\"name\"}\r\n          type={\"string\"}\r\n          register={register}\r\n        />\r\n        <ErrorMessage errors={errors} name={'name'} as={<p className={s.requiredInput}/>}/>\r\n      </label>\r\n      <label>\r\n        Price:\r\n        <Input\r\n          type={\"number\"}\r\n          label={\"price\"}\r\n          register={register}\r\n        />\r\n        <ErrorMessage errors={errors} name={'price'} as={<p className={s.requiredInput}/>}/>\r\n      </label>\r\n      <label>\r\n        Quantity:\r\n        <Input\r\n          type={\"number\"}\r\n          label={\"quantity\"}\r\n          register={register}\r\n        />\r\n        <ErrorMessage errors={errors} name={'quantity'} as={<p className={s.requiredInput}/>}/>\r\n\r\n      </label>\r\n      <button className={s.addNewProductBtn}>Add new item</button>\r\n    </form>\r\n  );\r\n};","import { FC, useEffect } from \"react\";\r\n\r\nimport { SummaryBlock } from \"../../components/SummaryBlock/SummaryBlock\";\r\nimport { Cart } from \"../../components/Cart/Cart\";\r\nimport { AddNewItemForm } from \"../../components/AddNewItemForm/AddNewItemForm\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/hooks\";\r\nimport { getLoadingStatus } from \"../../store/selectors/selectors\";\r\nimport { loadProducts } from \"../../store/actions/actions\";\r\n\r\nimport s from \"./ShoppingCartPage.module.scss\";\r\n\r\nconst ShoppingCartPage: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const isLoading = useAppSelector(getLoadingStatus);\r\n  useEffect(() => dispatch(loadProducts()), [dispatch]);\r\n  return (\r\n    <>\r\n      <h1 className={s.header}>Shopping cart</h1>\r\n      {\r\n        isLoading\r\n          ? <h2 className={s.loading}>Loading...</h2>\r\n          : <div className={s.mainPart}>\r\n            <Cart/>\r\n            <div className={s.totalAndForm}>\r\n              <SummaryBlock/>\r\n              <AddNewItemForm/>\r\n            </div>\r\n          </div>\r\n      }\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\nexport default ShoppingCartPage;\r\n","import React, { FC } from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./store/store\";\r\nimport ShoppingCartPage from \"./pages/App/ShoppingCartPage\";\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path={\"/shopping-cart-typescript\"} element={<ShoppingCartPage/>}/>\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    </React.StrictMode>\r\n  );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport \"./index.scss\";\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}